import{_ as R,i as O,A as W,r as u,B as G,o as j,m as z,s as y,a as n,c as r,b as s,t as o,x as m,z as L,C as H,F as h,e as w,D as J,E as M,g as C,G as E,p as K,f as Q}from"./index-5f332ad0.js";const X=$=>(K("data-v-a1452e20"),$=$(),Q(),$),Y={class:"permission-manager"},Z={class:"controls"},x={class:"name-input"},ee={for:"roleName"},se=X(()=>s("span",{class:"required"},"*",-1)),le=["placeholder"],te={key:0,class:"loading"},ae={key:0,class:"empty-state"},oe={key:1,class:"table-view"},ie=["rowspan"],ne=["id","checked",".indeterminate","onChange","aria-label"],re=["for"],de=["onClick","disabled"],ue=["id","value","aria-label"],ce={key:2,class:"card-view"},ve={class:"permission-groups"},pe={class:"group-header"},me=["id","checked",".indeterminate","onChange","aria-label"],he=["for"],be={class:"permission-items"},fe={class:"permission-info"},_e=["id","value","aria-label"],$e=["for"],ge=["onClick","disabled"],ke=["disabled"],ye={class:"modal-content"},we={setup($){const T=O(),b=W(),P=u([]),D=u(null),c=u(!0),d=u([]),v=u(""),g=u(!1),V=u(""),k=u(!1),f=G(()=>b.params.id),q=()=>{C.get("/api/role/all/permissions").then(e=>{P.value=e.data.data,f.value?A():c.value=!1}).catch(()=>{c.value=!1,alert("Failed to fetch permissions")})},A=()=>{if(!b.params.id||isNaN(Number(b.params.id))){c.value=!1,alert("Invalid role ID");return}C.get(`/api/role/${b.params.id}`).then(e=>{D.value=e.data.data,v.value=D.value.name,d.value=D.value.permissions.map(a=>a.id),c.value=!1}).catch(()=>{c.value=!1,alert("Failed to fetch role data")})},B=e=>{const a={};return e.forEach(i=>{const l=i.name.match(/^(list|show|create|edit|delete)\s+(.+)/),t=l?l[2]:"other";a[t]||(a[t]={name:t.charAt(0).toUpperCase()+t.slice(1),value:t,permissions:[]}),a[t].permissions.push(i)}),Object.values(a).sort((i,l)=>i.name.localeCompare(l.name))},_=G(()=>B(P.value)),I=e=>{const a=e.permissions.map(i=>i.id);N(e.value)?d.value=d.value.filter(i=>!a.includes(i)):d.value=[...new Set([...d.value,...a])]},N=e=>{const a=_.value.find(i=>i.value===e);return!a||a.permissions.length===0?!1:a.permissions.every(i=>d.value.includes(i.id))},S=e=>{const a=_.value.find(t=>t.value===e);if(!a||a.permissions.length===0)return!1;const i=a.permissions.some(t=>d.value.includes(t.id)),l=a.permissions.every(t=>d.value.includes(t.id));return i&&!l},F=e=>{V.value=e||"No description available",g.value=!0},U=()=>{if(!v.value){alert("Please enter a role name");return}const e={name:v.value,permissions:d.value};(f.value?C.put(`/api/role/${b.params.id}`,e):C.post("/api/role",e)).then(()=>{T.push({name:"roles"})}).catch(i=>{alert("Failed to submit role"),console.error("Error:",i)})};return j(()=>{q()}),(e,a)=>{const i=z("can");return y((n(),r("div",Y,[s("h1",null,o(m(f)?e.$t("role.edit"):e.$t("role.create")),1),s("div",Z,[s("div",x,[s("label",ee,[L(o(e.$t("role.role_Name"))+" ",1),se]),y(s("input",{type:"text",id:"roleName","onUpdate:modelValue":a[0]||(a[0]=l=>v.value=l),placeholder:e.$t("role.enter_role_name"),required:""},null,8,le),[[H,v.value]])]),s("button",{onClick:a[1]||(a[1]=l=>k.value=!k.value),class:"view-toggle"},o(k.value?e.$t("role.switchToCardView"):e.$t("role.switchToTableView")),1)]),c.value?(n(),r("div",te,o(m(f)?e.$t("role.loading.roleData"):e.$t("role.loading.permissions")),1)):(n(),r(h,{key:1},[m(_).length===0?(n(),r("div",ae,o(e.$t("role.noPermissionsAvailable")),1)):k.value?(n(),r("div",oe,[s("table",null,[s("thead",null,[s("tr",null,[s("th",null,o(e.$t("role.group")),1),s("th",null,o(e.$t("role.permission")),1),s("th",null,o(e.$t("role.description")),1),s("th",null,o(e.$t("role.select")),1)])]),s("tbody",null,[(n(!0),r(h,null,w(m(_),l=>(n(),r(h,{key:l.value},[(n(!0),r(h,null,w(l.permissions,t=>(n(),r("tr",{key:t.id},[l.permissions.indexOf(t)===0?(n(),r("td",{key:0,rowspan:l.permissions.length},[s("input",{type:"checkbox",id:`group-${l.value}-table`,checked:N(l.value),".indeterminate":S(l.value),onChange:p=>I(l),"aria-label":e.$t("role.toggleGroup",{group:l.name})},null,40,ne),s("label",{for:`group-${l.value}-table`},o(l.name),9,re)],8,ie)):M("",!0),s("td",null,o(t.name),1),s("td",null,[s("button",{onClick:p=>F(t.description),class:"description-btn",disabled:!t.description},o(t.description?e.$t("role.view"):e.$t("role.none")),9,de)]),s("td",null,[y(s("input",{type:"checkbox",id:`permission-${t.id}-table`,value:t.id,"onUpdate:modelValue":a[2]||(a[2]=p=>d.value=p),"aria-label":e.$t("role.togglePermission",{permission:t.name})},null,8,ue),[[E,d.value]])])]))),128))],64))),128))])])])):(n(),r("div",ce,[s("div",ve,[(n(!0),r(h,null,w(m(_),l=>(n(),r("div",{key:l.value,class:"permission-group"},[s("div",pe,[s("input",{class:"mx-2 my-auto",type:"checkbox",id:`group-${l.value}`,checked:N(l.value),".indeterminate":S(l.value),onChange:t=>I(l),"aria-label":e.$t("role.toggleGroup",{group:l.name})},null,40,me),s("label",{for:`group-${l.value}`},o(l.name),9,he)]),s("div",be,[(n(!0),r(h,null,w(l.permissions,t=>(n(),r("div",{key:t.id,class:"permission-item"},[s("div",fe,[y(s("input",{type:"checkbox",id:`permission-${t.id}`,value:t.id,"onUpdate:modelValue":a[3]||(a[3]=p=>d.value=p),"aria-label":e.$t("role.togglePermission",{permission:t.name})},null,8,_e),[[E,d.value]]),s("label",{for:`permission-${t.id}`},o(t.name),9,$e)]),s("button",{onClick:p=>F(t.description),class:"description-btn",disabled:!t.description},o(t.description?e.$t("role.viewDescription"):e.$t("role.noDescription")),9,ge)]))),128))])]))),128))])]))],64)),s("button",{onClick:U,class:"submit-btn",disabled:d.value.length===0||!v.value},o(m(f)?e.$t("role.updateWithPermissions"):e.$t("role.createWithPermissions")),9,ke),g.value?(n(),r("div",{key:2,class:"modal-overlay",onClick:a[5]||(a[5]=J(l=>g.value=!1,["self"]))},[s("div",ye,[s("h3",null,o(e.$t("role.permission_Description")),1),s("p",null,o(V.value),1),s("button",{onClick:a[4]||(a[4]=l=>g.value=!1),class:"close-modal"},o(e.$t("role.close")),1)])])):M("",!0)])),[[i,"edit roles"]])}}},De=R(we,[["__scopeId","data-v-a1452e20"]]);export{De as default};
